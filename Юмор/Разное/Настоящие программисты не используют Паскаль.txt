          Настоящие программисты не используют Паскаль


   В прошлом, во  времена  золотой  эры ЭВМ было легко отличать
мальчика от мужа (иначе  их  называют  "сосунки"  и  "настоящие
мужчины", соответственно). Тогда настоящие мужчины были те, кто
понимал в программировании,  с сосунки  -  те,  кто не понимал.
Настоящий программист легко произносил такие фразы,  как "DO 10
I  1, 10" или "АВОСТ", а все остальные нечто вроде "ЭВМ  слиш-
ком сложна для меня" и "Я не могу полагаться на ЭВМ - они слиш-
ком безличны". Предыдущая работа, B. Feirstein, "Настоящие муж-
чины не употребляют фруктовый пирог", издание PocketBook, 1982,
отмечает,  что настоящие мужчины  ни на что не полагаются  и не
боятся быть обезличенными.

   Но времена меняются.  Сегодня  мы  живем в мире,  в  котором
маленькие   старые  дамы  могут  приобрести  компьютезированную
микроволновую  печь,  12-летние  пацаны  могут  выбить из колеи
настоящих мужчин при игре на ЭВМ в астероиды и в очко и, вообще,
любой человек может купить и понять свой собственный персональ-
ный компьютер. Настоящий программист в опасности, он может быть
заменен студентами высшей школы.

   Однако,  существует  разница между студентом-первокурсником,
освоившим на ЭВМ игру в очко и настоящим программистом.  Знание
этих  различий  может помочь детям  познать к чему стремиться -
модель поведения,  стереотоп отца.  Это также поможет сохранить
рабочие места для настоящих программистов.

   Самый простой способ определить, кто является настоящим про-
граммистом - по используемому языку программирования. Настоящие
программисты используют  Фортран.  Сосунки  используют Паскаль.
Никлауса Вирта, разработчика Паскаля, однажды спросили: "Как вы
произносите свою фамилию?".  "Вы  можете  обращаться ко  мне по
фамилии, произнося ее 'Вирт', или обращаться ко мне по значению,
'Ворт'", - ответил он. [Игра слов : Nicklaus Wirth произносится
так же, как английское слово Worth - стоящий, ценный]

   Исходя из этой ремарки, любой сразу поймет, что Никлаус Вирт
- сосунок.  Единственный механизм передачи параметров, принима-
емый  настоящим программистом - это передача параметров по зна-
чению,  как это реализовано в компиляторах  Фортрана G и H  для
ЭВМ IBM/370.  Настоящим программистам  для выполнения работы не
нужны абстрактные концепции: для счастья им достаточно перфора-
тора,  компилятора Фортран-IV  и пива.  Настоящие  программисты
пишут программы работы со списками, обработки строк,  учета ре-
сурсов (если они вообще это делают) и искусственного  интелекта
на Фортране.

   Если вы не можете выполнить эти работы на Фортране, выполни-
те их на ассемблере. Если же их нельзя выполнить на ассемблере,
их не стоит делать вообще.

   В последние несколько лет  академиков от вычислительной тех-
ники  вовлекли  на  стезю  структурного  программирования.  Они
утверждают,  что  программы  становятся  более понятными,  если
используются  специальные  языковые методы и конструкции.  Они,
конечно,  не могут договориться  между собой,  какие точно кон-
струкции следует использовать,  а  примеры,  иллюстрирующие  их
точку зрения,  всегда помещаются на одной страничке неизвестных
журналов.  Когда я окончил школу,  я  считал  себя самым лучшим
программистом в мире. Я мог написать непобедимую программу игры
в крестики-нолики  в  трехмерном пространстве на пяти различных
языках программирования, а также написать программу,  состоящую
из 1000 строк,  которая бы работала.  Затем я попал в  реальный
мир.  Моей первой задачей было прочитать и понять фортрановскую
программу емкостью 200000 строк,  а затем увеличить скорость ее
работы в 2 раза.  Любой настоящий программист скажет  вам,  что
все  структурированное  программирование  мира  не  поможет вам
решить  проблемы  вроде  этой  -  решение  этой  задачи требует
настоящего таланта.

   Несколько наблюдений о настоящих приграммистах и структурном
программировании:

   - настоящие программисты не боятся использовать GOTO;
   - настоящие программисты могут без смущения написать цикл DO
     на пяти страницах;
   - настоящие  программисты любят арифметические операторы IF,
     т.к. их использование делает программу более интересной;
   - настоящие программисты используют  самомодифицирующий код,
     особенно в тех случаях, когда это экономит 20 наносекунд в
     середине очень короткого цикла;
   - настоящие программисты не нуждаются в комментариях : текст
     программы все объясняет;
   - поскольку в Фортране отсутствуют структурные операторы IF,
     REPEAT ... UNTIL  или  CASE,  настоящим  программистам  не
     нужно беспокоиться,  что они их не используют;  кроме того
     эти  операторы  можно  при  необходимости  симулировать  с
     помощью присваиваемых GOTO.

   В  последнее  время  в  прессе муссируются структуры данных.
Абстрактные типы данных, структуры, указатели,  списки и строки
стали популярны в определенных кругах.  Вирт, сосунок,  написал
даже  целую книгу  ("Алгоритмы + Структуры данных  Программы",
Prentice Hall, 1976  [русский перевод -  изд. "Мир", 198?]),  в
которой утверждает, что можно написать программу на базе струк-
тур  данных,  не  используя  другие  способы. Как все настоящие
программисты  знают,  единственной  полезной  структурой данных
является массив.  Строки,  списки, структуры и наборы - это все
разновидности массивов и их можно рассматривать как массивы без
усложнения  вашего языка приграммирования.  Хуже  всего с этими
хитрыми  типами  данных  то,  что  вы  должны  их  описывать, а
настоящие  языки  программирования,  как мы все знаем, обладают
возможностью неявного задания типа, основанного на первой букве
6-символьного имени переменной.

   В какой операционной системе работает настоящий программист?
В CP/M ? Боже сохрани! Помимо всего прочего, это в основном иг-
рушка,  а не операционная система. Даже маленькие старые дамы и
абитуриенты могут работать в CP/M и понять ее.

   UNIX, конечно, более сложная система -  типичный  последова-
тель  UNIX'а никогда не может запомнить, как на этой неделе на-
зывается команда PRINT - но когда он наконец доберется до  нее,
UNIX становится восхитительной видеоигрой. Люди не делают серь-
езных  работ  в системе UNIX, они рассылают шутки по всему миру
по USENET или пишут приключенческие романы и научные статьи.

   Нет,  настоящий программист  использует OS/370. Хороший про-
граммист  может  найти и понять описание только что полученного
сообщения об ошибке IJK305I в руководстве по JSL. По-настоящему
знаменитый  программист может найти ошибки в распечатке 6-мега-
байтной  области памяти,  не используя калькулятор шестнадцати-
ричной системы счисления.

   OS/370  по  настоящему  удивительная  система.  В  ней можно
уничтожить работы стоимостью несколько человеко-дней с  помощью
одного  неправильно  помещенного пробела, так-что штат програм-
мистов всегда должен быть на чеку.  Наилучший способ  общения с
системой - через перфоратор. Некоторые утверждают, что в OS/370
существует  система разделения времени,  но после внимательного
изучения я пришел к выводу, что они ошибаются.

   Какие инструменты использует настоящий программист  в  своей
работе?  Теоретически,  настоящий  программист  может запускать
свои программы, набирая их на передней  панели  ЭВМ.  В  добрые
старые времена, когда ЭВМ имели передние панели, этот метод ис-
пользовался  время  от  времени. Типичный настоящий программист
знал наизусть начальный загрузчик в шестнадцатиричной системе и
восстанавливал его с пульта, когда он разрушался  его  програм-
мой.  Более того, память была памятью - ее содержимое не пропа-
дало при выключении питания. В настоящее время память либо  за-
бывает  факты,  когда  вы этого не хотите, либо помнит о вещах,
которые давно следовало бы забыть. Ходит легенда,  что  Seymour
Cray,  изобретатель  супер-ЭВМ  Cray-1  и большинства ЭВМ фирмы
Control Data, ввел с пульта наизусть первую операционную систе-
му ЭВМ CDC 7600 при первом включении этой ЭВМ. Конечно, Cray  -
настоящий программист.

   Одним  из  моих  любимых  настоящих программистов был Джим -
системный программист фирмы Texas Instruments. Однажды, ему  по
междугородному телефону позвонил пользователь, чья система раз-
рушилась  в процессе очень важной работы. Джим исправил систему
по телефону, заставляя пользователя набирать на передней панели
ЭВМ команды обращения к диску, исправлять системные  таблицы  в
шестнадцатиричной  системе и считывать ему по телефону содержи-
мое регистров. Мораль этой истории: хотя настоящий  программист
обычно  включает  в набор своих инструментов перфоратор и АЦПУ,
он может в экстренных ситуациях обойтись передней панелью ЭВМ и
телефоном.

   В некоторых фирмах редактирование текстов программ больше не
представляет собой очередь из 10 инженеров,  ожидающих освобож-
дения  перфоратора  029.  Более  того,  здание где я работал не
содержит вообще ни одного перфоратора. Настоящий программист  в
таких  условиях  должен  выполнять  работу с помощью текстового
редактора.  Большинство  систем  предлагают  на выбор несколько
текстовых  редакторов,  но  настоящий программист  должен  быть
очень  осторожен  в  выборе,  отражающего его индивидуальность.
Многие   думают,  что  наилучшие  текстовые  редакторы  в  мире
написаны в исследовательском центре фирмы Xerox в Palo Alto для
работы с ЭВМ марок Alto и Dorado.  К сожалению, ни один настоя-
щий программист не будет работать на ЭВМ  с операционной систе-
мой под названием Smalltalk (короткий разговор) и конечно же не
будет беседовать с ЭВМ с помощью "мышки".

   Некоторые из концепций этих редакторов фирмы Xerox были реа-
лизованы в редакторах, работающих в операционных системах с бо-
лее солидными названиями, такими как EMACS и VI.  Дело  в  том,
что  настоящий программист считает плохим следующий принцип ре-
дактора: "То, что вы видите, то вы и получите". Настоящий прог-
раммист желает редактор с принципом: "Вы это просили, вот вам";
т.е. редактор, который был бы  сложным,  шифрованным,   мощным,
непрощающим и опасным. Редактор TECO - чтобы быть точным.

   Было  замечено, что последовательность команд TECO более на-
поминает помехи в линии передачи, чем читаемый текст.  Одна  из
самых  развлекательных  игр  с TECO - напечатать в качестве ко-
мандной строки свою фамилию и попытаться  догадаться,  что  она
сделает.  Точно  так  же  любая случайная опечатка при работе с
TECO может разрушить вашу программу, или, хуже того, внести не-
уловимые и мистические ошибки в уже работающую программу.

   Из-за  этого настоящие программисты неохотно редактируют уже
работающие программы. Они считают более простым непосредственно
латать  двоичный объектный код,  используя прекрасную программу
под  названием  SuperZap (или ее эквивалент на не-IBM машинах).
Этот метод настолько хорош, что многие программы, работающие на
ЭВМ  фирмы  ИБМ,  не  имеют  ничего общего со своим собственным
текстом на Фортране.  В большом количестве случаев первоначаль-
ный  символьный  текст  программы  вообще  не существует. Когда
наступает  время  подправить  такого  рода  программу,  никакой
администратор  даже  не думает послать на эту работу кого-либо,
кроме  настоящего  программиста  - никакой сосунок (структурный
программист) не будут знать даже с чего начать.  Это называется
защита от несанкционированного доступа.

   Некоторые  не  используемые настоящим программистом средства
программирования включают:

   - препроцессоры  Фортрана,  такие  как Mortran и Ratfor; эти
     кулинарные рецепты в  программировании  хороши для выпечки
     фруктового пирога;
   - отладчики  для  работы с текстом программы; настоящие про-
     граммисты  могут  свободно  читать  распечатку оперативной
     памяти;
   - компиляторы  с  проверкой  границ массива; эти компиляторы
     душат  творчество,  запрещая  наиболее интересные варианты
     оператора  EQUIVALENCE и препятствуют модификации операци-
     онной  системы  с помощью отрицательных индексов массивов.
     Кроме всего прочего, контроль границ массива не эффективен;

   - системы  сопровождения  и  архивизации  символьных текстов
     программ;   настоящий   программист   хранит  текст  своих
     программ  в закрытом на замок ящике (на перфокартах), т.к.
     владелец не может оставить свои программы без охраны.

   Где же  работает типичный настоящий программист ? Какие про-
граммы достойны таких талантливых индивидумов ?  Вы можете быть
уверены,  что настоящий программист не умрет за написанием про-
граммы  "Зарплата"  на  Коболе  или  сортируя  список  почтовых
отправлений журнала People. Настоящий программист желает задачи
с важностью землетрясения.

   Настоящие программисты  работают на национальную лабораторию
в Лос-Аламосе, создавая программы на супер ЭВМ Cray-1,  модели-
рующие атомную бомбу.  Они так же работают на Агенство по Наци-
ональной Безопасности, расшифровывая передачи русских.

   В большой степени из-за усилий тысяч настоящих программистов,
работающих  в  NASA,  наши ребята добрались до Луны и вернулись
обратно, опередив космонавтов. ЭВМ в космическом корабле "Шатл"
были  запрограммированы  настоящими программистами,  и  эти  же
истинные профессионалы работают на фирму Боинг, создавая опера-
ционные системы для крылатых ракет.

   Одна  из  приводящих  в благоговейный трепет работ настоящих
программистов  выполнена  в  Лаборатории  реактивного движения,
Калифорния. Многие знают всю  операционную систему  космических
кораблей  "Пионер"  и  "Вояджер"  наизусть.  С помощью симбиоза
больших  наземных  фортрановских  программ и маденьких бортовых
ассемблерных,  они  могут  совершать невероятные чудеса в нави-
гации и импровизации - такие, как попасть в окно шириной  10 км
в кольце Сатурна после 6-ти лет полета в космосе и починить или
обойти  неисправные  сенсорные платформы,  радиопередатчики или
аккумуляторы.  Утверждают, что один настоящий программист умуд-
рился  засунуть  прграмму распознавания образов в несколько сот
байт  неиспользованной  памяти  корабля "Вояджер", которая осу-
ществляла  поиск,  обнаружила  и  сфотографировала  новую  луну
Юпитера.

   Одна из планируемых задач для корабля "Галлилей" - использо-
вать  притяжение  Марса  на  траектории  полета к Юпитеру.  Эта
траектория проходит в 80 +/- 3 км  от поверхности Марса.  Никто
не собирается доверить паскалевской программе или  программисту
такую навигационную задачу.

   Многие  из  настоящих  программистов  всего мира работают на
правительство  США,  в  основном  в Министерстве Обороны. Так и
должно быть.  Однако,  недавно на небосклоне настоящих програм-
мистов  появилась  черная туча.  Кажется, что кто-то из высоко-
поставленных  сосунков  в  Министерстве Обороны  решил, что все
оборонные  программы  должны  быть  написаны  на некоем великом
унифицированном языке  ADA.  Некоторое время казалось,  что ADA
была  предназначена стать языком,  который шел вразрез со всеми
правилами настоящего программирования.  Это язык со структурой,
типами данных, строгим синтаксисом и точками с запятой. Короче,
он  был  разработан для сдерживания творчества типичного насто-
ящего  программиста.  К счастью,  язык одобряемый Министерством
Обороны,  обладает  достаточно  интересными свойствами, которые
делают его приемлемым -  он невероятно сложен,  включает в себя
способы  порчи операционной системы и перераспределения памяти,
и Эдгар Дейкстра (Edsgar Dijkstra) не любит его.  Дейкстре, как
вы  должны  знать,  автору  краеугольной  работы по методологии
программирования  "GOTO - считать вредными",  апплодируют  про-
граммисты на Паскале и подобные им сосунки. Да и потом, закоре-
нелый  настоящий  программист может написать фортрановскую про-
грамму на любом языке.

   Настоящий  программист  может  пойти  на компромис со своими
принципами  и  работать  над вещами немного более тривиальными,
чем  распад  жизни,  при условии, что  здесь достаточно платят.
Например,   существует   несколько   настоящих   программистов,
разрабатывающих  видео-игры  в  Atari.  Но  они  сами в игры не
играют. Настоящий программист знает, как выиграть у машины, и в
этом  нет  пряного удовольствия.  Каждый работающий в LucasFilm
является  настоящим  программистом,   потому,  что  нужно  быть
сумасшедшим, чтобы отвергнуть деньги 50-ти милионов поклонников
Звездных войн (Star Wars).

   Доля  настоящих  программистов,  занятых  машинной графикой,
несколько ниже нормы в основном потому, что никто пока не нашел
ей применения. С другой строны, вся машинная графика  выполнена
на Фортране,  так  что  существует  определенное  число  людей,
занимающихся графикой для того, чтобы избежать программирования
на Коболе.

   В  общем  случае  настоящий программист развлекается так же,
как  и  работает - с помощью ЭВМ.  Он  не перестает  удивляться
тому,  что его работодатель платит ему за то,  что он все равно
бы делал для развлечения,  хотя он достаточно осторожен,  чтобы
высказать  это  мнение  вслух.   Иногда  настоящий  программист
выходит из конторы, чтобы глотнуть свежего воздуха или кружечку
-другую пива. Существует несколько признаков,  по которым можно
узнать настоящего программиста за пределами машинного зала :

   - на  вечеринке  настоящие программисты  это те, кто сидит в
     углу, обсуждая защиту операционных систем и как ее обойти;
   - на  футбольном матче  настоящий программист сравнивает ход
     игры с "проигровками", распечатанными на фальцованной  11-
     или 14-дюймовой бумаге;
   - на пляже настоящий программист рисует блок-схемы на песке;
   - настоящий программист ходит в диско-клуб, чтобы посмотреть
     мигание лампочек;
   - на  похоронах  настоящий  программист  изрекает :  "Бедный
     Джордж.  А  ведь  он  почти  заставил  работать  программу
     сортировки, когда его хватил инсульт";
   - в  бакалейном магазине  настоящий  программист  настаивает
     на  собственноручной  проверке банок на лазерном аппарате,
     т.к.  он не верит,  что операторы могут правильно отперфо-
     рировать данные с первого раза.

   В  каких условиях лучше всего работается настоящему програм-
мисту ?  Это  очень  важный  вопрос  для  начальников настоящих
программистов.  Учитывая  высокую стоимость  содержания  одного
такого в штате, лучше создать ему или ей оптимальные условия.

   Типичный  настоящий программист  живет  перед  дисплеем ЭВМ.
Вокруг   этого  дисплея   расположены  листинги  программ,  над
которыми   он  когда-либо  работал.  Они  складированы  в  кучи
приблизительно  в  хронологическом  порядке  на  каждой плоской
поверхности конторы.  Вы так же обнаружите полдюжины, или около
того,  наполовину выпитых чашек с холодным кофе.  Иногда в кофе
можно  обнаружить  плавающие  "хабарики"  сигарет.  В некоторых
случаях  в  чашках  находится  выжатый апельсин. И только в тех
случаях,   когда  программист  не  очень  хорош,   вы   увидите
экземпляры  руководства  OS JSL и принципов работы, открытых на
особо  интересных  страницах.  Приклеенный  клейкой  лентой, на
стене  висит  распечатанный на АЦПУ календарь с собачкой Снуппи
за  1969  год.  На  полу  разбросаны обертки от хлеба с сыром и
земляными  орехами  (такого,  который становится черствым уже в
пекарне,  так что не может стать хуже в торговых автоматах). И,
наконец,  в  верхнем  левом  ящике стола, под коробочкой Oreos,
находится  линейка-шаблон для вычерчивания блок-схем, оставлен-
ная  предыдущим  владельцем стола. Настоящие программисты пишут
программы,  а  не  документацию,  которую  они  оставляют штату
сопровождения.

   Настоящий программист  может  работать  по  30, 40 и даже 50
часов непрерывно, под интенсивным нажимом.  На самом деле, он и
предпочитает  так  работать.  Плохое время отклика не беспокоит
настоящего программиста;  он  получает  возможность  вздремнуть
между  трансляциями.  Если  график  выполнения  работы не очень
жесткий,  то  настоящий программист  предпочитает  делать  свою
жизнь   более  захватывающей,   работая  первые  9  недель  над
маленькой, но интересной частью проблемы. Затем, он заканчивает
выполнение всей остальной части за 2 или 3 50-часовых марафона.
Это  не  только  впечатляет  начальника,  но  и создает удобное
оправдание  не  делать  документацию.  В  общем случае, ни один
настоящий программист не работает с 9 до 5, за исключением тех,
кто  работает  в  ночную смену.  Настоящие прграммисты не носят
галстуков.  Настоящие программисты приходят на работу вовремя -
к обеду. Настоящий программист может знать,  а может и не знать
имя  своей  супруги.  Он,  однако, знает наизусть таблицу ASCII
(или EBCDIC) символов. Настоящие программисты не умеют готовить.
Бакалейные магазины не часто открыты в 3 часа ночи, так что они
должны уметь выживать на печенье и кофе.

   Заглядывая  в  будущее,   некоторые  настоящие  программисты
считают, что новейшее поколение программистов имеет не такие же
взгляды  на  жизнь,  как  их  старшие  товарищи.  Многие из них
никогда  не  видели  передней  панели  ЭВМ. Едва-ли кто-либо из
выпускников  в  наши  дни   может   производить   вычисления  в
шестнадцатиричной   системе   без   калькулятора.   Сегодняшние
выпускники колледжей слабы -  они защищены от реальностей жизни
символьными отладчиками, редакторами текстов, которые подсчиты-
вают скобки, и лояльными к пользователю операционными системами.
Хуже  того,  некоторые  из этих патентованных ученых умудрились
"защититься"  без  изучения  Фортрана !  Неужели нам предписано
свыше  стать отраслью  фанатиков UNIX'а и паскалевских програм-
мистов ?

   Из  собственного  опыта,  я  думаю, можно смело сказать, что
будущее  прекрасно  для  настоящих программистов. Ни OS/370, ни
Фортран  не  высказывают ни каких признаков отмирания, несмотря
на  усилия  программистов  на  Паскале.  Даже  такие изощренные
уловки,  как  добавление  конструкций структурного программиро-
вания в Фортран, провалились.  Да, конечно, некоторые изготови-
тели  ЭВМ  выпустили  компиляторы Фортрана-77, но каждый из них
оставил  возможность  перейти в режим компилятора Фортрана-66 с
помощью удаления  одной перфокарты - чтобы  компилировать циклы
DO как предписано богом.

   Даже  UNIX  может быть не так уж плох для настоящих програм-
мистов,  как  в  прошлом.  Последняя реализация UNIX'а обладает
потенциальными  возможностями,  ценными  для  любого настоящего
программиста.  Она  имеет  два различных и слегка несовместимых
пользовательских интерфейса, аркан и сложный драйвер терминала,
и виртуальную память.  Если пренебречь тем, что он структурный,
то даже программирование на языке "C" может быть по достоинству
оценено  настоящим  программистом.  В  конце  концов, в нем нет
проверки типов, имена переменных имеют 7 (10 ?, 8 ?) символов в
длину  и  введен  полезный  тип  данных  "указатель" (pointer).
Получается,  как  будто  соединены  воедино  лучшие части языка
Фортран и Ассемблера, не говоря уже о более творческих примене-
ниях оператора #DEFINE.

   Нет,  будущее  не так уж и мрачно. В последние несколько лет
даже  популярная  пресса  сообщала  о  новом  урожае  блестящих
фанатиков, выпущенных из таких мест, как Стенфорд и Массачусет-
ский Технологический Институт, в реальный мир.  По всему видно,
что дух настоящего программирования живет в этих молодых юношах
и девушках. Пока существуют плохо поставленные задачи, странные
ошибки  и нереалистичиские расписания машинного времени,  будут
находится  настоящие программисты,  желающие  взять  на себя  и
решить проблему, оставив документацию на потом.

  Да здравствует Фортран !
